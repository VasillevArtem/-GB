//Задайте значение N. Напишите программу, которая выведет все натуральные числа в промежутке от N до 1. Выполнить с помощью рекурсии.
static string RecOutput(int value) => value == 1 ? "1" : value + " " + RecOutput(value - 1);

//Задайте значения M и N. Напишите программу, которая найдёт сумму натуральных элементов в промежутке от M до N.
static int SumNumbers(int mValue, int nValue)
{
    if (mValue == 0)
    {
        return (nValue * (nValue + 1)) / 2;                  // Если M равно нулю
    }
    else if (nValue == 0)
    {
        return (mValue * (mValue + 1)) / 2;                  // Если N равно нулю
    }                                           
    else if (mValue == nValue)
    {
        return mValue;                                       // Если M=N
    }                                                 
    else if (mValue < nValue)
    {
        return nValue + SumNumbers(mValue, nValue - 1);      // Если M<N
    }        
    else
    {
        return nValue + SumNumbers(mValue, nValue + 1);      // Если M>N
    }
        
}

// Напишите программу вычисления функции Аккермана с помощью рекурсии. Даны два неотрицательных числа m и n.
 static int Akkerman(int m, int n)
{
    
    if (m == 0)
    {
        return n + 1;
    } 
    else if (n == 0 && m > 0)
    {
        return Akkerman(m - 1, 1);
    } 
    else
    {
        return Akkerman(m - 1, Akkerman(m, n - 1));
    }
}
